lecturerAvailability = dict
finalSchedule = dict
lecturesToInsert = list

class currentLecture(
    lecture = null
    timeToInsert = null
    type = null
    students = []
)


while lecturesToInsert not empty;
    ( code for deciding when (random or not) to insert lectures )
    currentModule = currentLecture(lecturesToInsert, time, type, students)

    if schedule[currentModule.timeToInsert] == null;
        schedule insert currentModule

    elif schedule[currentModule.timeToInsert] != null;
        occupiedModule = schedule[currentModule.timeToInsert]

        if currentModule.time is in lecturerAvailability;
            break to while
        
        else;

            if occupiedModule.type == full;
                break to while
            
            if occupiedModule.type == partial;
                
                for student in currentLecture.students;

                    if student in occupiedModule;
                        break to while
                    else;
                        finalSchedule.insert(currentLecture)


-- test cases =

    module with no lecture overlap
    module with lecture availability overlap
    module with full class lecture overlap
    module with partial class lecture overlap, and no student overlap
    module with partial class lecture overlap, with student overlap

will smells